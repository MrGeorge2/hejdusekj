// Code generated by entc, DO NOT EDIT.

package localization

const (
	// Label holds the string label denoting the localization type in the database.
	Label = "localization"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLanguageID holds the string denoting the language_id field in the database.
	FieldLanguageID = "language_id"
	// FieldLocalizationValue holds the string denoting the localizationvalue field in the database.
	FieldLocalizationValue = "localization_value"
	// EdgeLanguage holds the string denoting the language edge name in mutations.
	EdgeLanguage = "language"
	// Table holds the table name of the localization in the database.
	Table = "localizations"
	// LanguageTable is the table that holds the language relation/edge.
	LanguageTable = "localizations"
	// LanguageInverseTable is the table name for the Language entity.
	// It exists in this package in order to avoid circular dependency with the "language" package.
	LanguageInverseTable = "languages"
	// LanguageColumn is the table column denoting the language relation/edge.
	LanguageColumn = "language_id"
)

// Columns holds all SQL columns for localization fields.
var Columns = []string{
	FieldID,
	FieldLanguageID,
	FieldLocalizationValue,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
